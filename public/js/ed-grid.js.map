{"version":3,"names":[],"mappings":"","sources":["js/ed-grid.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.edgrid = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\r\n  'use strict';\r\n\r\n  Object.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n  });\r\n\r\n  var _menu = require('./menu');\r\n\r\n  var _menu2 = _interopRequireDefault(_menu);\r\n\r\n  var _migrate = require('./migrate');\r\n\r\n  var _migrate2 = _interopRequireDefault(_migrate);\r\n\r\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n  exports.default = { menu: _menu2.default, migrate: _migrate2.default };\r\n  module.exports = exports['default'];\r\n\r\n},{\"./menu\":2,\"./migrate\":3}],2:[function(require,module,exports){\r\n  'use strict';\r\n\r\n  Object.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n  });\r\n\r\n\r\n\r\n\r\n  var _utils = require('./utils');\r\n\r\n  exports.default = function (navId, menuId) {\r\n    var nav = (0, _utils.$)('#' + navId),\r\n      menu = (0, _utils.$)('#' + menuId),\r\n      toggleButton = (0, _utils.$)('#' + navId + '-toggle');\r\n\r\n    function showNav() {\r\n      nav.classList.toggle('show-menu');\r\n    }\r\n\r\n    function showSubMenu(e) {\r\n      if (e.target.classList.contains('expand-submenu')) {\r\n        e.preventDefault();\r\n        e.target.classList.toggle('active');\r\n        e.target.previousElementSibling.classList.toggle('show-submenu');\r\n      }\r\n    }\r\n\r\n    // si el nav y toggle existen mostrar u ocultar menu\r\n    if (nav) {\r\n      if (toggleButton) {\r\n        toggleButton.addEventListener('click', showNav);\r\n      } else {\r\n        console.error('Not found ' + navId + '-toggle Id');\r\n      }\r\n    } else {\r\n      console.error('Not found ' + navId + ' Id');\r\n    }\r\n\r\n    if (menu) {\r\n      // show submenus\r\n      menu.addEventListener('click', showSubMenu);\r\n      //\r\n      // while (menuItemsLength--) {\r\n      //   let menuItem = menuItems[menuItemsLength];\r\n      //   // Detectar si un item es padre de un submenu\r\n      //   if (menuItem.querySelector('ul') != null) {\r\n      //     menuItem.classList.add('parent-submenu');\r\n      //\r\n      //\r\n      //   }\r\n      // }\r\n\r\n      (0, _utils.each)((0, _utils.$)('li', menu) /* menuItems */, function (menuItem) {\r\n        // Detectar si un item es padre de un submenu\r\n        if (menuItem.querySelector('ul') != null) {\r\n          menuItem.classList.add('parent-submenu');\r\n\r\n          //Crear toggle button para submenus\r\n          var expandSubmenu = document.createElement('div');\r\n          expandSubmenu.classList.add('expand-submenu');\r\n          menuItem.appendChild(expandSubmenu);\r\n        }\r\n      });\r\n    } else {\r\n      console.error('Not found ' + menuId + ' Id');\r\n    }\r\n  };\r\n\r\n  module.exports = exports['default'];\r\n\r\n},{\"./utils\":4}],3:[function(require,module,exports){\r\n  'use strict';\r\n\r\n  Object.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n  });\r\n\r\n  var _utils = require('./utils');\r\n\r\n  exports.default = function () {\r\n\r\n    // Clases antiguas (como clave) y nuevas (como valor).\r\n    var classes = {\r\n      grupo: 'ed-container',\r\n      caja: 'ed-item',\r\n      total: 'full',\r\n      'hasta-tablet': 'to-m',\r\n      'hasta-web': 'to-l',\r\n      'hasta-hd': 'to-xl',\r\n      'desde-tablet': 'from-m',\r\n      'desde-web': 'from-l',\r\n      'desde-hd': 'from-xl',\r\n      'base-': 's-',\r\n      'movil-': 's-',\r\n      'tablet-': 'm-',\r\n      'web-': 'l-',\r\n      'hd-': 'xl-'\r\n    };\r\n\r\n    // Obtenemos las clases antiguas.\r\n    var oldClasses = Object.keys(classes);\r\n\r\n    // Expresión regular que encuentra los selectores antiguos\r\n    // a partir del className de un elemento.\r\n    // Creada a partir de: http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript#answer-196038\r\n    var OLD_SELECTORS_REGEX = new RegExp([\r\n\r\n      // Coincide con el inicio del className o\r\n      // con un espacio que precede al selector antiguo.\r\n      '(^|\\\\s)',\r\n\r\n      // Conicide con uno de todos los selectores.\r\n      '(' + oldClasses.join('|') + ')',\r\n\r\n      // Coincide con el tamaño asignado por el selector\r\n      // ej: base-50, coincidiría con 50.\r\n      '(\\\\d{1,3}|\\\\d-\\\\d)?',\r\n\r\n      // Coincide con el selector antiguo que este seguido\r\n      // por un espacio o con el final del className.\r\n      '(?!\\\\S)'].join(''), 'g');\r\n\r\n    // Creamos un nuevo arreglo con los selectores de atributo\r\n    // y de clase, resultantes de las clases antiguas.\r\n    var oldSelectors = oldClasses.map(function (oldClass) {\r\n\r\n      // Verificamos si se necesita un selector de atributo.\r\n      // Si se necesita, lo retornamos con este.\r\n      if (oldClass.endsWith('-')) {\r\n        return '[class*=\"' + oldClass + '\"]';\r\n      }\r\n\r\n      // De lo contrario, lo retornamos como selector de clase.\r\n      return '.' + oldClass;\r\n    });\r\n\r\n    // Iteramos todos los elementos para añadir las nuevas clases.\r\n    (0, _utils.each)((0, _utils.$)(oldSelectors.join()), function (element) {\r\n      var match = void 0;\r\n      var newClasses = '';\r\n\r\n      // Iteramos todas las coincidencias.\r\n      while (match = OLD_SELECTORS_REGEX.exec(element.className)) {\r\n        newClasses += ' ' + (classes[match[2]] + (match[3] || ''));\r\n      }\r\n\r\n      // Añadimos las nuevas clases.\r\n      element.className += newClasses;\r\n    });\r\n  };\r\n\r\n  module.exports = exports['default'];\r\n\r\n},{\"./utils\":4}],4:[function(require,module,exports){\r\n  \"use strict\";\r\n\r\n  Object.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n  });\r\n  exports.$ = $;\r\n  exports.each = each;\r\n  /**\r\n   * Alias del método `querySelectorAll`\r\n   *\r\n   * @param {String} selector\r\n   * @param {Document|HTMLElement} context\r\n   *\r\n   * @return {NodeList|HTMLElement}\r\n   *\r\n   * @private\r\n   */\r\n  function $(selector) {\r\n    var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\r\n\r\n    if (/^#[\\w-]+$/.test(selector)) {\r\n      return context.getElementById(selector.slice(1));\r\n    }\r\n\r\n    return context.querySelectorAll(selector);\r\n  }\r\n\r\n  /**\r\n   * Recorre todos los elementos de un NodeList o HTMLCollection.\r\n   *\r\n   * @param {NodeList|HTMLCollection} elements\r\n   * @param {Function} callback\r\n   *\r\n   * @return void\r\n   *\r\n   * @private\r\n   */\r\n  function each(elements, callback) {\r\n    var length = elements.length;\r\n\r\n\r\n    for (var i = 0; i < length; ++i) {\r\n      callback(elements[i], i, elements);\r\n    }\r\n  }\r\n\r\n},{}]},{},[1])(1)\r\n});\r\n\r\n\r\n\r\n//# sourceMappingURL=ed-grid.js.map\r\n"],"file":"ed-grid.js"}